version: "3.8"

services:
  nginx:
    image: "nginx:stable-alpine"
    ports:
      - "80:80"
    dns:
      - 8.8.8.8
      - 8.8.4.4
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./:/var/www/lutikflo
      - ./storage/docker/logs/nginx:/var/log/nginx
    depends_on:
      - postgres
      - app

  app:
    build:
      context: docker/php
      dockerfile: php.Dockerfile
    user: ${UID}:${GID}
    dns:
      - 8.8.8.8
      - 8.8.4.4
    volumes:
      - ./:/var/www/lutikflo
    depends_on:
      - postgres

  nodejs:
    image: "node:21"
    tty: true
    ports:
      - "5173:5173"
    working_dir: /var/www/lutikflo
    deploy:
      resources:
        limits:
          cpus: "1"
    volumes:
      - ./:/var/www/lutikflo
    entrypoint: ["sh", "-c", "npm install && npm run dev -- --host"]
#    entrypoint: ["sh", "-c", "npm install && rm ./public/hot && npm run build"]  #- для прода

#  mysql:
#    image: mysql:8.0
#    restart: always
#    environment:
#      MYSQL_DATABASE: ${DB_DATABASE}
#      MYSQL_USER: ${DB_USERNAME}
#      MYSQL_PASSWORD: ${DB_PASSWORD}
#      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
#    volumes:
#      - ./storage/docker/mysql_data:/var/lib/mysql
#    ports:
#      - "3306:3306"

  postgres:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./storage/docker/postgres_data:/var/lib/postgresql/data
    ports:
      - "5434:5432"

